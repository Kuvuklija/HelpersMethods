@using HelpersMethods.Models
<!--model IEnumerable<Person>-->
@model string
@{
    ViewBag.Title = "GetPeople";
    Layout = "~/Views/Shared/_Layout.cshtml";
    AjaxOptions ajaxOpts = new AjaxOptions{
        UpdateTargetId = "tableBody",
        //Confirm="Impliment AJAX request?",
        Url=Url.Action("GetPeopleData"),
        LoadingElementId="loading",
        LoadingElementDuration=1000
    };
}

<!--Callbacks Ajax-->
<script type="text/javascript">
    //function OnBegin() {
    //    alert("This is the OnBegin Callback");
    //}
    function processData(data) {
        var target = $("#testAjax");
        target.empty();
        for (var i = 0; i < data.length; i++) {
            var person = data[i];
            target.append("<tr><td>" + person.FirstName + "</td><td>"
                + person.LastName + "</td><td>" + person.Role + "</td></tr>");
        }
    }
    //function OnFailure(request, error) {
    //    alert("This is the OnFailure Callback: "+error);
    //}
    //function OnComplete(request, status) {
    //    alert("This is the OnComplete Callback: "+status);
    //}
</script>

<h2>Get People</h2>

<div id="loading" class="load" style="display: none">
    <p>Loading data from server...</p>
</div>

<table>
    <thead><tr><th>First</th><th>Last</th><th>Role</th></tr></thead>
    <tbody id="tableBody">
        <!--foreach(Person p in Model) {
            <tr>
                <td>p.FirstName</td>
                <td>p.LastName</td>
                <td>p.Role</td>
            </tr>
        }-->
        @Html.Action("GetPeopleData",new { selectedRole = Model })
    </tbody>
</table>
<div id="testAjax">

</div>

<!--using (Html.BeginForm()) {-->
<!--using (Ajax.BeginForm("GetPeopleData",ajaxOpts)) { -->
 @using (Ajax.BeginForm(ajaxOpts)) { //action is determing in URL-ajax properties-->for omited java-script-off in browser
    <div>
        @Html.DropDownList("selectedRole", new SelectList(
       new[] {"All"}.Concat(Enum.GetNames(typeof(Role)))))
        <button type="submit">Submit</button>
    </div>
}
<div>
    @foreach(string role in Enum.GetNames(typeof(Role))) {
        <div class="ajaxLink">
            <!--Ajax.ActionLink(role,"GetPeopleData",-->
            @Ajax.ActionLink(role, "GetPeople",
                     new {selectedRole=role},
                     new AjaxOptions {
                         //UpdateTargetId ="testAjax", //---> json not demand
                         //Url=Url.Action("GetPeopleData", new { selectedRole=role}),//---> json is called another method
                         Url=Url.Action("GetPeopleDataJson", new { selectedRole=role}),
                         //OnBegin = "OnBegin",
                         //OnFailure = "OnFailure",
                         OnSuccess = "processData"
                         //OnComplete = "OnComplete"
                     })
                     
        </div> 
    }
</div>

